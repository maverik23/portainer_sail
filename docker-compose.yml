services:
  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - sail

  # MailHog Service
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: always
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - sail

  # Redis Service
  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - sail

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    volumes:
      - phpmyadmin_data:/sessions
    ports:
      - "8080:80"
    networks:
      - sail

  # MinIO Service
  minio:
    image: minio/minio
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - sail

  # PHP Service (Laravel)
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-php
    restart: unless-stopped
    volumes:
      - ./app:/var/www/html
    networks:
      - sail

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./app:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - sail

volumes:
  mysql_data:
  phpmyadmin_data:
  minio_data:

networks:
  sail:
    driver: bridge